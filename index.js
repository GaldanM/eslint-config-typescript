module.exports = {
  plugins: ["@typescript-eslint"],
  extends: ["@galdanm/eslint-config-base", "plugin:@typescript-eslint/all"],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    project: "tsconfig.json",
    sourceType: "module",
  },
  rules: {
    "@typescript-eslint/ban-ts-comment": ["error", { "ts-expect-error": false }],
    "@typescript-eslint/ban-types": ["error", { types: { object: false } }],
    "@typescript-eslint/comma-dangle": "off",
    "@typescript-eslint/explicit-function-return-type": ["error", { allowExpressions: true }],
    "@typescript-eslint/explicit-member-accessibility": ["error", { accessibility: "no-public" }],
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/init-declarations": "off",
    "@typescript-eslint/lines-between-class-members": ["error", { exceptAfterSingleLine: true }],
    "@typescript-eslint/naming-convention": [
      "error",
      { selector: "default", format: ["strictCamelCase", "PascalCase", "UPPER_CASE"] },
    ],
    "@typescript-eslint/no-implicit-any-catch": "off",
    "@typescript-eslint/no-magic-numbers": "off",
    "@typescript-eslint/no-type-alias": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars-experimental": ["error", { ignoreArgsIfArgsAfterAreUsed: true }],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/object-curly-spacing": ["error", "always"],
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/quotes": ["error", "double"],
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/space-before-function-paren": [
      "error",
      { anonymous: "never", named: "never", asyncArrow: "always" },
    ],
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/typedef": "off",
  },
};
